// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/nlp/answer_question_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Nlp {

  /// <summary>Holder for reflection information generated from avikom/nlp/answer_question_service.proto</summary>
  public static partial class AnswerQuestionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/nlp/answer_question_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnswerQuestionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihhdmlrb20vbmxwL2Fuc3dlcl9xdWVzdGlvbl9zZXJ2aWNlLnByb3RvEgph",
            "dmlrb20ubmxwIjgKE0Fuc3dlclF1ZXN0aW9uUXVlcnkSDwoHY29udGV4dBgB",
            "IAEoCRIQCghxdWVzdGlvbhgCIAEoCSJTChZBbnN3ZXJRdWVzdGlvblJlc3Bv",
            "bnNlEg0KBXNjb3JlGAEgASgCEg0KBXN0YXJ0GAIgASgFEgsKA2VuZBgDIAEo",
            "BRIOCgZhbnN3ZXIYBCABKAkycAoVQW5zd2VyUXVlc3Rpb25TZXJ2aWNlElcK",
            "DkFuc3dlclF1ZXN0aW9uEh8uYXZpa29tLm5scC5BbnN3ZXJRdWVzdGlvblF1",
            "ZXJ5GiIuYXZpa29tLm5scC5BbnN3ZXJRdWVzdGlvblJlc3BvbnNlIgBCYAoU",
            "YXBwLmF2aWtvbS50eXBlcy5ubHBaNWdpdGxhYi51Yi51bmktYmllbGVmZWxk",
            "LmRlL2F2aWtvbS9nby10eXBlcy9hdmlrb20vbmxwqgIQQXZpa29tLlR5cGVz",
            "Lk5scGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Nlp.AnswerQuestionQuery), global::Avikom.Types.Nlp.AnswerQuestionQuery.Parser, new[]{ "Context", "Question" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Nlp.AnswerQuestionResponse), global::Avikom.Types.Nlp.AnswerQuestionResponse.Parser, new[]{ "Score", "Start", "End", "Answer" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This message is used to ask a question to be answered on the basis of the context.
  /// @author: Lars Schalkwijk &lt;lars.schalkwijk@fh-bielefeld.de>
  /// </summary>
  public sealed partial class AnswerQuestionQuery : pb::IMessage<AnswerQuestionQuery> {
    private static readonly pb::MessageParser<AnswerQuestionQuery> _parser = new pb::MessageParser<AnswerQuestionQuery>(() => new AnswerQuestionQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerQuestionQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Nlp.AnswerQuestionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionQuery(AnswerQuestionQuery other) : this() {
      context_ = other.context_;
      question_ = other.question_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionQuery Clone() {
      return new AnswerQuestionQuery(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private string context_ = "";
    /// <summary>
    //// this text string should contain the answer to the question
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "question" field.</summary>
    public const int QuestionFieldNumber = 2;
    private string question_ = "";
    /// <summary>
    //// the question you would like to find an answer to in the context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Question {
      get { return question_; }
      set {
        question_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerQuestionQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerQuestionQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Context != other.Context) return false;
      if (Question != other.Question) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (Question.Length != 0) hash ^= Question.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Context.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Context);
      }
      if (Question.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Question);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (Question.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Question);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerQuestionQuery other) {
      if (other == null) {
        return;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.Question.Length != 0) {
        Question = other.Question;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Context = input.ReadString();
            break;
          }
          case 18: {
            Question = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// This message is includes the response to the posed question and where in the context the answer was found.
  /// @author: Lars Schalkwijk &lt;lars.schalkwijk@fh-bielefeld.de>
  /// </summary>
  public sealed partial class AnswerQuestionResponse : pb::IMessage<AnswerQuestionResponse> {
    private static readonly pb::MessageParser<AnswerQuestionResponse> _parser = new pb::MessageParser<AnswerQuestionResponse>(() => new AnswerQuestionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerQuestionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Nlp.AnswerQuestionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionResponse(AnswerQuestionResponse other) : this() {
      score_ = other.score_;
      start_ = other.start_;
      end_ = other.end_;
      answer_ = other.answer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerQuestionResponse Clone() {
      return new AnswerQuestionResponse(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    /// <summary>
    //// confidence between 0-1 that the correct answer was found 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private int start_;
    /// <summary>
    //// start position of answer in charactercount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private int end_;
    /// <summary>
    //// end position of answer in charactercount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 4;
    private string answer_ = "";
    /// <summary>
    //// the answer to the posed question is a text excerpt from the context
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Answer {
      get { return answer_; }
      set {
        answer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerQuestionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerQuestionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      if (Answer != other.Answer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (Answer.Length != 0) hash ^= Answer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (Start != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(End);
      }
      if (Answer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Answer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (Answer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Answer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerQuestionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      if (other.Answer.Length != 0) {
        Answer = other.Answer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 16: {
            Start = input.ReadInt32();
            break;
          }
          case 24: {
            End = input.ReadInt32();
            break;
          }
          case 34: {
            Answer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
