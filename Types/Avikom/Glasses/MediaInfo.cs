// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/glasses/media_info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Glasses {

  /// <summary>Holder for reflection information generated from avikom/glasses/media_info.proto</summary>
  public static partial class MediaInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/glasses/media_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MediaInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9hdmlrb20vZ2xhc3Nlcy9tZWRpYV9pbmZvLnByb3RvEg5hdmlrb20uZ2xh",
            "c3NlcxohYXZpa29tL2dlbmVyaWMvY29udGVudF90eXBlLnByb3RvImgKCU1l",
            "ZGlhSW5mbxISCgptZWRpYV9uYW1lGAEgASgJEjEKDGNvbnRlbnRfdHlwZRgC",
            "IAEoDjIbLmF2aWtvbS5nZW5lcmljLkNvbnRlbnRUeXBlEhQKDG1pbGxpc2Vj",
            "b25kcxgDIAEoDUJsChhhcHAuYXZpa29tLnR5cGVzLmdsYXNzZXNaOWdpdGxh",
            "Yi51Yi51bmktYmllbGVmZWxkLmRlL2F2aWtvbS9nby10eXBlcy9hdmlrb20v",
            "Z2xhc3Nlc6oCFEF2aWtvbS5UeXBlcy5HbGFzc2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Generic.ContentTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Glasses.MediaInfo), global::Avikom.Types.Glasses.MediaInfo.Parser, new[]{ "MediaName", "ContentType", "Milliseconds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This message describes a media file, it's name (or file path), its content type (e.g. video, audio, image) and the current playback time if applicable.
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class MediaInfo : pb::IMessage<MediaInfo> {
    private static readonly pb::MessageParser<MediaInfo> _parser = new pb::MessageParser<MediaInfo>(() => new MediaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Glasses.MediaInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaInfo(MediaInfo other) : this() {
      mediaName_ = other.mediaName_;
      contentType_ = other.contentType_;
      milliseconds_ = other.milliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaInfo Clone() {
      return new MediaInfo(this);
    }

    /// <summary>Field number for the "media_name" field.</summary>
    public const int MediaNameFieldNumber = 1;
    private string mediaName_ = "";
    /// <summary>
    //// media name, identifier or file path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaName {
      get { return mediaName_; }
      set {
        mediaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private global::Avikom.Types.Generic.ContentType contentType_ = 0;
    /// <summary>
    //// the content type, e.g. video, image or audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Generic.ContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "milliseconds" field.</summary>
    public const int MillisecondsFieldNumber = 3;
    private uint milliseconds_;
    /// <summary>
    //// the current playback time location; not applicable for images etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Milliseconds {
      get { return milliseconds_; }
      set {
        milliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MediaName != other.MediaName) return false;
      if (ContentType != other.ContentType) return false;
      if (Milliseconds != other.Milliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MediaName.Length != 0) hash ^= MediaName.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Milliseconds != 0) hash ^= Milliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MediaName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MediaName);
      }
      if (ContentType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ContentType);
      }
      if (Milliseconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Milliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MediaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaName);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (Milliseconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Milliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaInfo other) {
      if (other == null) {
        return;
      }
      if (other.MediaName.Length != 0) {
        MediaName = other.MediaName;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Milliseconds != 0) {
        Milliseconds = other.Milliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MediaName = input.ReadString();
            break;
          }
          case 16: {
            ContentType = (global::Avikom.Types.Generic.ContentType) input.ReadEnum();
            break;
          }
          case 24: {
            Milliseconds = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
