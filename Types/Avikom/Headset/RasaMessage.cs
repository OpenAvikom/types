// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/headset/rasa_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Headset {

  /// <summary>Holder for reflection information generated from avikom/headset/rasa_message.proto</summary>
  public static partial class RasaMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/headset/rasa_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RasaMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFhdmlrb20vaGVhZHNldC9yYXNhX21lc3NhZ2UucHJvdG8SDmF2aWtvbS5o",
            "ZWFkc2V0GiNhdmlrb20vZ2VuZXJpYy9rZXlfdmFsdWVfcGFpci5wcm90byJb",
            "CgtSYXNhTWVzc2FnZRIOCgZpbnRlbnQYASABKAkSKwoFc2xvdHMYAiADKAsy",
            "HC5hdmlrb20uZ2VuZXJpYy5LZXlWYWx1ZVBhaXISDwoHdXNlcl9pZBgDIAEo",
            "BEJsChhhcHAuYXZpa29tLnR5cGVzLmhlYWRzZXRaOWdpdGxhYi51Yi51bmkt",
            "YmllbGVmZWxkLmRlL2F2aWtvbS9nby10eXBlcy9hdmlrb20vaGVhZHNldKoC",
            "FEF2aWtvbS5UeXBlcy5IZWFkc2V0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Generic.KeyValuePairReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Headset.RasaMessage), global::Avikom.Types.Headset.RasaMessage.Parser, new[]{ "Intent", "Slots", "UserId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A RasaMessage provides the intents and slots recognized by rasa for a specific user.
  /// @author Lars Schalkwijk &lt;lars.schalkwijk@fh-bielefeld.de>
  /// </summary>
  public sealed partial class RasaMessage : pb::IMessage<RasaMessage> {
    private static readonly pb::MessageParser<RasaMessage> _parser = new pb::MessageParser<RasaMessage>(() => new RasaMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RasaMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Headset.RasaMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RasaMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RasaMessage(RasaMessage other) : this() {
      intent_ = other.intent_;
      slots_ = other.slots_.Clone();
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RasaMessage Clone() {
      return new RasaMessage(this);
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 1;
    private string intent_ = "";
    /// <summary>
    //// the recognized intention of the user input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Intent {
      get { return intent_; }
      set {
        intent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slots" field.</summary>
    public const int SlotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Avikom.Types.Generic.KeyValuePair> _repeated_slots_codec
        = pb::FieldCodec.ForMessage(18, global::Avikom.Types.Generic.KeyValuePair.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Generic.KeyValuePair> slots_ = new pbc::RepeatedField<global::Avikom.Types.Generic.KeyValuePair>();
    /// <summary>
    //// additional information extracted from user input as key-value pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Generic.KeyValuePair> Slots {
      get { return slots_; }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private ulong userId_;
    /// <summary>
    //// the user who provided the input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RasaMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RasaMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Intent != other.Intent) return false;
      if(!slots_.Equals(other.slots_)) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Intent.Length != 0) hash ^= Intent.GetHashCode();
      hash ^= slots_.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Intent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Intent);
      }
      slots_.WriteTo(output, _repeated_slots_codec);
      if (UserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Intent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Intent);
      }
      size += slots_.CalculateSize(_repeated_slots_codec);
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RasaMessage other) {
      if (other == null) {
        return;
      }
      if (other.Intent.Length != 0) {
        Intent = other.Intent;
      }
      slots_.Add(other.slots_);
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Intent = input.ReadString();
            break;
          }
          case 18: {
            slots_.AddEntriesFrom(input, _repeated_slots_codec);
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
