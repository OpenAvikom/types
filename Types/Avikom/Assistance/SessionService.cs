// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/assistance/session_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Assistance {

  /// <summary>Holder for reflection information generated from avikom/assistance/session_service.proto</summary>
  public static partial class SessionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/assistance/session_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidhdmlrb20vYXNzaXN0YW5jZS9zZXNzaW9uX3NlcnZpY2UucHJvdG8SEWF2",
            "aWtvbS5hc3Npc3RhbmNlGihhdmlrb20vYXNzaXN0YW5jZS9hc3Npc3RhbmNl",
            "X2xldmVsLnByb3RvGihhdmlrb20vYXNzaXN0YW5jZS9pbnN0cnVjdGlvbl90",
            "ZXh0LnByb3RvGilhdmlrb20vYXNzaXN0YW5jZS9pbnN0cnVjdGlvbl9tZWRp",
            "YS5wcm90bxopYXZpa29tL2Fzc2lzdGFuY2UvcnVudGltZV9zdGVwX2xpc3Qu",
            "cHJvdG8aH2F2aWtvbS9hc3Npc3RhbmNlL3Nlc3Npb24ucHJvdG8aJWF2aWtv",
            "bS9hc3Npc3RhbmNlL3Nlc3Npb25fcXVlcnkucHJvdG8aHGF2aWtvbS9vcHRp",
            "b25zL29wdGlvbnMucHJvdG8aHWF2aWtvbS9nZW5lcmljL21vZGFsaXR5LnBy",
            "b3RvGhthdmlrb20vZ2VuZXJpYy9yZXN1bHQucHJvdG8aGWF2aWtvbS9nZW5l",
            "cmljL3BlZXIucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8a",
            "G2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90byJ5ChpFbnZpcm9ubWVudGFs",
            "RmFjdG9yc1VwZGF0ZRISCgpzY2VuZV9uYW1lGAEgASgJEg8KB3VzZXJfaWQY",
            "AiABKAQSEgoKc2Vzc2lvbl9pZBgDIAEoCRISCgpicmlnaHRuZXNzGAUgASgC",
            "Eg4KBnZvbHVtZRgGIAEoAiJcCgxTZXNzaW9uRXZlbnQSEgoKc2Vzc2lvbl9p",
            "ZBgBIAEoCRISCgpldmVudF9uYW1lGAIgASgJEiQKBnNlbmRlchgDIAEoCzIU",
            "LmF2aWtvbS5nZW5lcmljLlBlZXIiLAoJVGFza0V2ZW50Eg8KB3Rhc2tfaWQY",
            "ASABKAkSDgoGcmVzdWx0GAIgASgJIn8KD0luc3RydWN0aW9uTGlzdBI4Cgxp",
            "bnN0cnVjdGlvbnMYASADKAsyIi5hdmlrb20uYXNzaXN0YW5jZS5JbnN0cnVj",
            "dGlvblRleHQSMgoFbWVkaWEYAiADKAsyIy5hdmlrb20uYXNzaXN0YW5jZS5J",
            "bnN0cnVjdGlvbk1lZGlhMqIGCg5TZXNzaW9uU2VydmljZRJGCglFbWl0RXZl",
            "bnQSHy5hdmlrb20uYXNzaXN0YW5jZS5TZXNzaW9uRXZlbnQaFi5hdmlrb20u",
            "Z2VuZXJpYy5SZXN1bHQiABJKChBDb21wbGV0ZVRhc2tTdGVwEhwuYXZpa29t",
            "LmFzc2lzdGFuY2UuVGFza0V2ZW50GhYuYXZpa29tLmdlbmVyaWMuUmVzdWx0",
            "IgASRgoMRmFpbFRhc2tTdGVwEhwuYXZpa29tLmFzc2lzdGFuY2UuVGFza0V2",
            "ZW50GhYuYXZpa29tLmdlbmVyaWMuUmVzdWx0IgASVwoOR2V0Q3VycmVudFN0",
            "ZXASHy5hdmlrb20uYXNzaXN0YW5jZS5TZXNzaW9uUXVlcnkaIi5hdmlrb20u",
            "YXNzaXN0YW5jZS5SdW50aW1lU3RlcExpc3QiABJJCgxTdGFydFNlc3Npb24S",
            "Hy5hdmlrb20uYXNzaXN0YW5jZS5TZXNzaW9uUXVlcnkaFi5hdmlrb20uZ2Vu",
            "ZXJpYy5SZXN1bHQiABJLCg5TdXNwZW5kU2Vzc2lvbhIfLmF2aWtvbS5hc3Np",
            "c3RhbmNlLlNlc3Npb25RdWVyeRoWLmF2aWtvbS5nZW5lcmljLlJlc3VsdCIA",
            "EkcKCkVuZFNlc3Npb24SHy5hdmlrb20uYXNzaXN0YW5jZS5TZXNzaW9uUXVl",
            "cnkaFi5hdmlrb20uZ2VuZXJpYy5SZXN1bHQiABJlChpVcGRhdGVFbnZpcm9u",
            "bWVudGFsRmFjdG9ycxItLmF2aWtvbS5hc3Npc3RhbmNlLkVudmlyb25tZW50",
            "YWxGYWN0b3JzVXBkYXRlGhYuYXZpa29tLmdlbmVyaWMuUmVzdWx0IgASTgoQ",
            "UmVnaXN0ZXJVc2VyUGVlchIULmF2aWtvbS5nZW5lcmljLlBlZXIaIi5hdmlr",
            "b20uYXNzaXN0YW5jZS5SdW50aW1lU3RlcExpc3QiABJDCg9FbmRBbGxQcm9j",
            "ZXNzZXMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFi5hdmlrb20uZ2VuZXJp",
            "Yy5SZXN1bHQiAEJ1ChthcHAuYXZpa29tLnR5cGVzLmFzc2lzdGFuY2VaPGdp",
            "dGxhYi51Yi51bmktYmllbGVmZWxkLmRlL2F2aWtvbS9nby10eXBlcy9hdmlr",
            "b20vYXNzaXN0YW5jZaoCF0F2aWtvbS5UeXBlcy5Bc3Npc3RhbmNlYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Assistance.AssistanceLevelReflection.Descriptor, global::Avikom.Types.Assistance.InstructionTextReflection.Descriptor, global::Avikom.Types.Assistance.InstructionMediaReflection.Descriptor, global::Avikom.Types.Assistance.RuntimeStepListReflection.Descriptor, global::Avikom.Types.Assistance.SessionReflection.Descriptor, global::Avikom.Types.Assistance.SessionQueryReflection.Descriptor, global::Avikom.Types.Options.OptionsReflection.Descriptor, global::Avikom.Types.Generic.ModalityReflection.Descriptor, global::Avikom.Types.Generic.ResultReflection.Descriptor, global::Avikom.Types.Generic.PeerReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.EnvironmentalFactorsUpdate), global::Avikom.Types.Assistance.EnvironmentalFactorsUpdate.Parser, new[]{ "SceneName", "UserId", "SessionId", "Brightness", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.SessionEvent), global::Avikom.Types.Assistance.SessionEvent.Parser, new[]{ "SessionId", "EventName", "Sender" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.TaskEvent), global::Avikom.Types.Assistance.TaskEvent.Parser, new[]{ "TaskId", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.InstructionList), global::Avikom.Types.Assistance.InstructionList.Parser, new[]{ "Instructions", "Media" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A message to update current environmental factors such as brightness and/or volume for a user session or a scene.
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class EnvironmentalFactorsUpdate : pb::IMessage<EnvironmentalFactorsUpdate> {
    private static readonly pb::MessageParser<EnvironmentalFactorsUpdate> _parser = new pb::MessageParser<EnvironmentalFactorsUpdate>(() => new EnvironmentalFactorsUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnvironmentalFactorsUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.SessionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentalFactorsUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentalFactorsUpdate(EnvironmentalFactorsUpdate other) : this() {
      sceneName_ = other.sceneName_;
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      brightness_ = other.brightness_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentalFactorsUpdate Clone() {
      return new EnvironmentalFactorsUpdate(this);
    }

    /// <summary>Field number for the "scene_name" field.</summary>
    public const int SceneNameFieldNumber = 1;
    private string sceneName_ = "";
    /// <summary>
    //// scene/location name where data has been tracked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneName {
      get { return sceneName_; }
      set {
        sceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    /// <summary>
    //// when set, relates info to the current session of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private string sessionId_ = "";
    /// <summary>
    //// when set, relates info the this specific session
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "brightness" field.</summary>
    public const int BrightnessFieldNumber = 5;
    private float brightness_;
    /// <summary>
    //// environmental lightning/brightness in lumen
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Brightness {
      get { return brightness_; }
      set {
        brightness_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 6;
    private float volume_;
    /// <summary>
    //// environmental loudness/volume in dbA
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnvironmentalFactorsUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnvironmentalFactorsUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneName != other.SceneName) return false;
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Brightness, other.Brightness)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneName.Length != 0) hash ^= SceneName.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (Brightness != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Brightness);
      if (Volume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SceneName);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (Brightness != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Brightness);
      }
      if (Volume != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneName);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (Brightness != 0F) {
        size += 1 + 4;
      }
      if (Volume != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnvironmentalFactorsUpdate other) {
      if (other == null) {
        return;
      }
      if (other.SceneName.Length != 0) {
        SceneName = other.SceneName;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.Brightness != 0F) {
        Brightness = other.Brightness;
      }
      if (other.Volume != 0F) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SceneName = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
          case 45: {
            Brightness = input.ReadFloat();
            break;
          }
          case 53: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///
  /// An event triggered by a peer to be escalated to the BPM engine (Camunda)
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class SessionEvent : pb::IMessage<SessionEvent> {
    private static readonly pb::MessageParser<SessionEvent> _parser = new pb::MessageParser<SessionEvent>(() => new SessionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.SessionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionEvent(SessionEvent other) : this() {
      sessionId_ = other.sessionId_;
      eventName_ = other.eventName_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionEvent Clone() {
      return new SessionEvent(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    //// session of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 2;
    private string eventName_ = "";
    /// <summary>
    //// the unique event name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private global::Avikom.Types.Generic.Peer sender_;
    /// <summary>
    //// who triggered the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Generic.Peer Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (EventName != other.EventName) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventName);
      }
      if (sender_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Sender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionEvent other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::Avikom.Types.Generic.Peer();
        }
        Sender.MergeFrom(other.Sender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            EventName = input.ReadString();
            break;
          }
          case 26: {
            if (sender_ == null) {
              Sender = new global::Avikom.Types.Generic.Peer();
            }
            input.ReadMessage(Sender);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///
  /// An event that should be processed by the BPM engine (Camunda) and/or AVIKOM services.
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class TaskEvent : pb::IMessage<TaskEvent> {
    private static readonly pb::MessageParser<TaskEvent> _parser = new pb::MessageParser<TaskEvent>(() => new TaskEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.SessionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEvent(TaskEvent other) : this() {
      taskId_ = other.taskId_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEvent Clone() {
      return new TaskEvent(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private string taskId_ = "";
    /// <summary>
    //// the ID of the current service task/RTS in which the event was triggered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private string result_ = "";
    /// <summary>
    //// the event result/outcome; in cases of a failed task this might me an error decription
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskEvent other) {
      if (other == null) {
        return;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
          case 18: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///
  /// A list of instructions with resolved fields.
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class InstructionList : pb::IMessage<InstructionList> {
    private static readonly pb::MessageParser<InstructionList> _parser = new pb::MessageParser<InstructionList>(() => new InstructionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstructionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.SessionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionList(InstructionList other) : this() {
      instructions_ = other.instructions_.Clone();
      media_ = other.media_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionList Clone() {
      return new InstructionList(this);
    }

    /// <summary>Field number for the "instructions" field.</summary>
    public const int InstructionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Avikom.Types.Assistance.InstructionText> _repeated_instructions_codec
        = pb::FieldCodec.ForMessage(10, global::Avikom.Types.Assistance.InstructionText.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionText> instructions_ = new pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionText>();
    /// <summary>
    //// textual instructions for this task step
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionText> Instructions {
      get { return instructions_; }
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int MediaFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Avikom.Types.Assistance.InstructionMedia> _repeated_media_codec
        = pb::FieldCodec.ForMessage(18, global::Avikom.Types.Assistance.InstructionMedia.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionMedia> media_ = new pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionMedia>();
    /// <summary>
    //// media content for this task step; includes prefabs and world objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Assistance.InstructionMedia> Media {
      get { return media_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstructionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstructionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instructions_.Equals(other.instructions_)) return false;
      if(!media_.Equals(other.media_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instructions_.GetHashCode();
      hash ^= media_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      instructions_.WriteTo(output, _repeated_instructions_codec);
      media_.WriteTo(output, _repeated_media_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instructions_.CalculateSize(_repeated_instructions_codec);
      size += media_.CalculateSize(_repeated_media_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstructionList other) {
      if (other == null) {
        return;
      }
      instructions_.Add(other.instructions_);
      media_.Add(other.media_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instructions_.AddEntriesFrom(input, _repeated_instructions_codec);
            break;
          }
          case 18: {
            media_.AddEntriesFrom(input, _repeated_media_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
