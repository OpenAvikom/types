// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/assistance/instruction_meta.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Assistance {

  /// <summary>Holder for reflection information generated from avikom/assistance/instruction_meta.proto</summary>
  public static partial class InstructionMetaReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/assistance/instruction_meta.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InstructionMetaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihhdmlrb20vYXNzaXN0YW5jZS9pbnN0cnVjdGlvbl9tZXRhLnByb3RvEhFh",
            "dmlrb20uYXNzaXN0YW5jZRooYXZpa29tL2Fzc2lzdGFuY2UvYXNzaXN0YW5j",
            "ZV9sZXZlbC5wcm90bxodYXZpa29tL2dlbmVyaWMvbW9kYWxpdHkucHJvdG8a",
            "HGF2aWtvbS91bml0eS90cmFuc3Bvc2UucHJvdG8ixwEKD0luc3RydWN0aW9u",
            "TWV0YRI8ChBhc3Npc3RhbmNlX2xldmVsGAEgASgOMiIuYXZpa29tLmFzc2lz",
            "dGFuY2UuQXNzaXN0YW5jZUxldmVsEiwKCm1vZGFsX2JpYXMYAiABKAsyGC5h",
            "dmlrb20uZ2VuZXJpYy5Nb2RhbGl0eRIQCghsb2NhdGlvbhgDIAEoCRIqCgl0",
            "cmFuc3Bvc2UYBCABKAsyFy5hdmlrb20udW5pdHkuVHJhbnNwb3NlEgoKAmlk",
            "GAUgASgJQnUKG2FwcC5hdmlrb20udHlwZXMuYXNzaXN0YW5jZVo8Z2l0bGFi",
            "LnViLnVuaS1iaWVsZWZlbGQuZGUvYXZpa29tL2dvLXR5cGVzL2F2aWtvbS9h",
            "c3Npc3RhbmNlqgIXQXZpa29tLlR5cGVzLkFzc2lzdGFuY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Assistance.AssistanceLevelReflection.Descriptor, global::Avikom.Types.Generic.ModalityReflection.Descriptor, global::Avikom.Types.Unity.TransposeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.InstructionMeta), global::Avikom.Types.Assistance.InstructionMeta.Parser, new[]{ "AssistanceLevel", "ModalBias", "Location", "Transpose", "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This message describes the common base for an instruction.
  /// Every instruction has an assistance level and can be modaly modulated
  /// They should all be compatible with the 'Basic Action Concept' (BAC) of SDA-M.
  /// @author: Lars Schalkwijk &lt;lars.schalkwijk@fh-bielefeld.de>
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class InstructionMeta : pb::IMessage<InstructionMeta> {
    private static readonly pb::MessageParser<InstructionMeta> _parser = new pb::MessageParser<InstructionMeta>(() => new InstructionMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstructionMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.InstructionMetaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionMeta(InstructionMeta other) : this() {
      assistanceLevel_ = other.assistanceLevel_;
      modalBias_ = other.modalBias_ != null ? other.modalBias_.Clone() : null;
      location_ = other.location_;
      transpose_ = other.transpose_ != null ? other.transpose_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionMeta Clone() {
      return new InstructionMeta(this);
    }

    /// <summary>Field number for the "assistance_level" field.</summary>
    public const int AssistanceLevelFieldNumber = 1;
    private global::Avikom.Types.Assistance.AssistanceLevel assistanceLevel_ = 0;
    /// <summary>
    //// the targeted assistance level, this instruction wont be available for users with less assistance requirements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Assistance.AssistanceLevel AssistanceLevel {
      get { return assistanceLevel_; }
      set {
        assistanceLevel_ = value;
      }
    }

    /// <summary>Field number for the "modal_bias" field.</summary>
    public const int ModalBiasFieldNumber = 2;
    private global::Avikom.Types.Generic.Modality modalBias_;
    /// <summary>
    //// whether an instruction should be preferably presented in a certain modality and whether a modality in generally unsuited for that introduction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Generic.Modality ModalBias {
      get { return modalBias_; }
      set {
        modalBias_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private string location_ = "";
    /// <summary>
    //// name of the scene/task asset this object should be referenced to;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transpose" field.</summary>
    public const int TransposeFieldNumber = 4;
    private global::Avikom.Types.Unity.Transpose transpose_;
    /// <summary>
    //// relative offset to the mentioned location
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Unity.Transpose Transpose {
      get { return transpose_; }
      set {
        transpose_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    /// <summary>
    //// an optional id to reference the instruction later
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstructionMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstructionMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssistanceLevel != other.AssistanceLevel) return false;
      if (!object.Equals(ModalBias, other.ModalBias)) return false;
      if (Location != other.Location) return false;
      if (!object.Equals(Transpose, other.Transpose)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssistanceLevel != 0) hash ^= AssistanceLevel.GetHashCode();
      if (modalBias_ != null) hash ^= ModalBias.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (transpose_ != null) hash ^= Transpose.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssistanceLevel != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AssistanceLevel);
      }
      if (modalBias_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModalBias);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Location);
      }
      if (transpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Transpose);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssistanceLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AssistanceLevel);
      }
      if (modalBias_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModalBias);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (transpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transpose);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstructionMeta other) {
      if (other == null) {
        return;
      }
      if (other.AssistanceLevel != 0) {
        AssistanceLevel = other.AssistanceLevel;
      }
      if (other.modalBias_ != null) {
        if (modalBias_ == null) {
          ModalBias = new global::Avikom.Types.Generic.Modality();
        }
        ModalBias.MergeFrom(other.ModalBias);
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.transpose_ != null) {
        if (transpose_ == null) {
          Transpose = new global::Avikom.Types.Unity.Transpose();
        }
        Transpose.MergeFrom(other.Transpose);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssistanceLevel = (global::Avikom.Types.Assistance.AssistanceLevel) input.ReadEnum();
            break;
          }
          case 18: {
            if (modalBias_ == null) {
              ModalBias = new global::Avikom.Types.Generic.Modality();
            }
            input.ReadMessage(ModalBias);
            break;
          }
          case 26: {
            Location = input.ReadString();
            break;
          }
          case 34: {
            if (transpose_ == null) {
              Transpose = new global::Avikom.Types.Unity.Transpose();
            }
            input.ReadMessage(Transpose);
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
