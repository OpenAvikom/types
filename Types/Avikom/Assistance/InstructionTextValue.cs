// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/assistance/instruction_text_value.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Assistance {

  /// <summary>Holder for reflection information generated from avikom/assistance/instruction_text_value.proto</summary>
  public static partial class InstructionTextValueReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/assistance/instruction_text_value.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InstructionTextValueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5hdmlrb20vYXNzaXN0YW5jZS9pbnN0cnVjdGlvbl90ZXh0X3ZhbHVlLnBy",
            "b3RvEhFhdmlrb20uYXNzaXN0YW5jZSJBChRJbnN0cnVjdGlvblRleHRWYWx1",
            "ZRINCgVwbGFpbhgBIAEoCRIMCgRzc21sGAIgASgJEgwKBGh0bWwYAyABKAlC",
            "dQobYXBwLmF2aWtvbS50eXBlcy5hc3Npc3RhbmNlWjxnaXRsYWIudWIudW5p",
            "LWJpZWxlZmVsZC5kZS9hdmlrb20vZ28tdHlwZXMvYXZpa29tL2Fzc2lzdGFu",
            "Y2WqAhdBdmlrb20uVHlwZXMuQXNzaXN0YW5jZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Assistance.InstructionTextValue), global::Avikom.Types.Assistance.InstructionTextValue.Parser, new[]{ "Plain", "Ssml", "Html" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// The actual value of a text instruction in different representations
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class InstructionTextValue : pb::IMessage<InstructionTextValue> {
    private static readonly pb::MessageParser<InstructionTextValue> _parser = new pb::MessageParser<InstructionTextValue>(() => new InstructionTextValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstructionTextValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Assistance.InstructionTextValueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionTextValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionTextValue(InstructionTextValue other) : this() {
      plain_ = other.plain_;
      ssml_ = other.ssml_;
      html_ = other.html_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstructionTextValue Clone() {
      return new InstructionTextValue(this);
    }

    /// <summary>Field number for the "plain" field.</summary>
    public const int PlainFieldNumber = 1;
    private string plain_ = "";
    /// <summary>
    //// value as plain text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plain {
      get { return plain_; }
      set {
        plain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ssml" field.</summary>
    public const int SsmlFieldNumber = 2;
    private string ssml_ = "";
    /// <summary>
    //// value with Speech Synthesis Markup Language annotation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssml {
      get { return ssml_; }
      set {
        ssml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "html" field.</summary>
    public const int HtmlFieldNumber = 3;
    private string html_ = "";
    /// <summary>
    //// value with HTML annotation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Html {
      get { return html_; }
      set {
        html_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstructionTextValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstructionTextValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Plain != other.Plain) return false;
      if (Ssml != other.Ssml) return false;
      if (Html != other.Html) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Plain.Length != 0) hash ^= Plain.GetHashCode();
      if (Ssml.Length != 0) hash ^= Ssml.GetHashCode();
      if (Html.Length != 0) hash ^= Html.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Plain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Plain);
      }
      if (Ssml.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ssml);
      }
      if (Html.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Html);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Plain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plain);
      }
      if (Ssml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssml);
      }
      if (Html.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Html);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstructionTextValue other) {
      if (other == null) {
        return;
      }
      if (other.Plain.Length != 0) {
        Plain = other.Plain;
      }
      if (other.Ssml.Length != 0) {
        Ssml = other.Ssml;
      }
      if (other.Html.Length != 0) {
        Html = other.Html;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Plain = input.ReadString();
            break;
          }
          case 18: {
            Ssml = input.ReadString();
            break;
          }
          case 26: {
            Html = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
