// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/unity/waypoint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Unity {

  /// <summary>Holder for reflection information generated from avikom/unity/waypoint.proto</summary>
  public static partial class WaypointReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/unity/waypoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WaypointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chthdmlrb20vdW5pdHkvd2F5cG9pbnQucHJvdG8SDGF2aWtvbS51bml0eRoa",
            "YXZpa29tL21hdGgvdmVjdG9yM2QucHJvdG8iZwoIV2F5cG9pbnQSDAoEbmFt",
            "ZRgBIAEoCRInCghsb2NhdGlvbhgCIAEoCzIVLmF2aWtvbS5tYXRoLlZlY3Rv",
            "cjNEEhEKCW5laWdoYm9ycxgDIAMoCRIRCgl0aHJlc2hvbGQYBCABKAJCZgoW",
            "YXBwLmF2aWtvbS50eXBlcy51bml0eVo3Z2l0bGFiLnViLnVuaS1iaWVsZWZl",
            "bGQuZGUvYXZpa29tL2dvLXR5cGVzL2F2aWtvbS91bml0eaoCEkF2aWtvbS5U",
            "eXBlcy5Vbml0eWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Math.Vector3DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Unity.Waypoint), global::Avikom.Types.Unity.Waypoint.Parser, new[]{ "Name", "Location", "Neighbors", "Threshold" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This describes a point in space and its conceptual neighbours.
  /// Waypoints are used to savely guide users from one location to another.
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class Waypoint : pb::IMessage<Waypoint> {
    private static readonly pb::MessageParser<Waypoint> _parser = new pb::MessageParser<Waypoint>(() => new Waypoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Waypoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Unity.WaypointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoint(Waypoint other) : this() {
      name_ = other.name_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      neighbors_ = other.neighbors_.Clone();
      threshold_ = other.threshold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoint Clone() {
      return new Waypoint(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    //// waypoint name to be adressable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Avikom.Types.Math.Vector3D location_;
    /// <summary>
    //// location of the waypoint in world coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Avikom.Types.Math.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "neighbors" field.</summary>
    public const int NeighborsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_neighbors_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> neighbors_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// neightbouring waypoints; if not set they might be derived from other waypoint neighbourhood relationships
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Neighbors {
      get { return neighbors_; }
    }

    /// <summary>Field number for the "threshold" field.</summary>
    public const int ThresholdFieldNumber = 4;
    private float threshold_;
    /// <summary>
    //// a 'bubble' (in meters) around a waypoint that determines when a waypoint is considered reached
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Threshold {
      get { return threshold_; }
      set {
        threshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Waypoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Waypoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!neighbors_.Equals(other.neighbors_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Threshold, other.Threshold)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= neighbors_.GetHashCode();
      if (Threshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Threshold);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      neighbors_.WriteTo(output, _repeated_neighbors_codec);
      if (Threshold != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Threshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += neighbors_.CalculateSize(_repeated_neighbors_codec);
      if (Threshold != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Waypoint other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Avikom.Types.Math.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
      neighbors_.Add(other.neighbors_);
      if (other.Threshold != 0F) {
        Threshold = other.Threshold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Avikom.Types.Math.Vector3D();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            neighbors_.AddEntriesFrom(input, _repeated_neighbors_codec);
            break;
          }
          case 37: {
            Threshold = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
