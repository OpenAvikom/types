// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/unity/scene_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Unity {

  /// <summary>Holder for reflection information generated from avikom/unity/scene_config.proto</summary>
  public static partial class SceneConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/unity/scene_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9hdmlrb20vdW5pdHkvc2NlbmVfY29uZmlnLnByb3RvEgxhdmlrb20udW5p",
            "dHkaHGF2aWtvbS9vcHRpb25zL29wdGlvbnMucHJvdG8aHmF2aWtvbS91bml0",
            "eS9nYW1lX29iamVjdC5wcm90bxobYXZpa29tL3VuaXR5L3dheXBvaW50LnBy",
            "b3RvIq8BCgtTY2VuZUNvbmZpZxIaCgpzY2VuZV9uYW1lGAEgASgJQgaKtRgC",
            "EAESKQoHYW5jaG9ycxgCIAMoCzIYLmF2aWtvbS51bml0eS5HYW1lT2JqZWN0",
            "EigKBmFzc2V0cxgDIAMoCzIYLmF2aWtvbS51bml0eS5HYW1lT2JqZWN0EikK",
            "CXdheXBvaW50cxgEIAMoCzIWLmF2aWtvbS51bml0eS5XYXlwb2ludDoEiLUY",
            "AUJmChZhcHAuYXZpa29tLnR5cGVzLnVuaXR5WjdnaXRsYWIudWIudW5pLWJp",
            "ZWxlZmVsZC5kZS9hdmlrb20vZ28tdHlwZXMvYXZpa29tL3VuaXR5qgISQXZp",
            "a29tLlR5cGVzLlVuaXR5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Options.OptionsReflection.Descriptor, global::Avikom.Types.Unity.GameObjectReflection.Descriptor, global::Avikom.Types.Unity.WaypointReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Unity.SceneConfig), global::Avikom.Types.Unity.SceneConfig.Parser, new[]{ "SceneName", "Anchors", "Assets", "Waypoints" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This message describes a scene config and contains location-bound parameters.
  /// It should also provide semantic anchors for task-specific configurations to be attached. 
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class SceneConfig : pb::IMessage<SceneConfig> {
    private static readonly pb::MessageParser<SceneConfig> _parser = new pb::MessageParser<SceneConfig>(() => new SceneConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Unity.SceneConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneConfig(SceneConfig other) : this() {
      sceneName_ = other.sceneName_;
      anchors_ = other.anchors_.Clone();
      assets_ = other.assets_.Clone();
      waypoints_ = other.waypoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneConfig Clone() {
      return new SceneConfig(this);
    }

    /// <summary>Field number for the "scene_name" field.</summary>
    public const int SceneNameFieldNumber = 1;
    private string sceneName_ = "";
    /// <summary>
    //// name of the scene the configuration belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneName {
      get { return sceneName_; }
      set {
        sceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "anchors" field.</summary>
    public const int AnchorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Avikom.Types.Unity.GameObject> _repeated_anchors_codec
        = pb::FieldCodec.ForMessage(18, global::Avikom.Types.Unity.GameObject.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Unity.GameObject> anchors_ = new pbc::RepeatedField<global::Avikom.Types.Unity.GameObject>();
    /// <summary>
    //// marked locations that synchronize the real and virtual environment; most likely QR codes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Unity.GameObject> Anchors {
      get { return anchors_; }
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Avikom.Types.Unity.GameObject> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(26, global::Avikom.Types.Unity.GameObject.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Unity.GameObject> assets_ = new pbc::RepeatedField<global::Avikom.Types.Unity.GameObject>();
    /// <summary>
    //// objects that are positioned in the scene; may act as anchors for task-specific configurations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Unity.GameObject> Assets {
      get { return assets_; }
    }

    /// <summary>Field number for the "waypoints" field.</summary>
    public const int WaypointsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Avikom.Types.Unity.Waypoint> _repeated_waypoints_codec
        = pb::FieldCodec.ForMessage(34, global::Avikom.Types.Unity.Waypoint.Parser);
    private readonly pbc::RepeatedField<global::Avikom.Types.Unity.Waypoint> waypoints_ = new pbc::RepeatedField<global::Avikom.Types.Unity.Waypoint>();
    /// <summary>
    //// coordinates that represents paths from one asset to antother. used to mark 'save' guidance routes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Avikom.Types.Unity.Waypoint> Waypoints {
      get { return waypoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneName != other.SceneName) return false;
      if(!anchors_.Equals(other.anchors_)) return false;
      if(!assets_.Equals(other.assets_)) return false;
      if(!waypoints_.Equals(other.waypoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneName.Length != 0) hash ^= SceneName.GetHashCode();
      hash ^= anchors_.GetHashCode();
      hash ^= assets_.GetHashCode();
      hash ^= waypoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SceneName);
      }
      anchors_.WriteTo(output, _repeated_anchors_codec);
      assets_.WriteTo(output, _repeated_assets_codec);
      waypoints_.WriteTo(output, _repeated_waypoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneName);
      }
      size += anchors_.CalculateSize(_repeated_anchors_codec);
      size += assets_.CalculateSize(_repeated_assets_codec);
      size += waypoints_.CalculateSize(_repeated_waypoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneConfig other) {
      if (other == null) {
        return;
      }
      if (other.SceneName.Length != 0) {
        SceneName = other.SceneName;
      }
      anchors_.Add(other.anchors_);
      assets_.Add(other.assets_);
      waypoints_.Add(other.waypoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SceneName = input.ReadString();
            break;
          }
          case 18: {
            anchors_.AddEntriesFrom(input, _repeated_anchors_codec);
            break;
          }
          case 26: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
          case 34: {
            waypoints_.AddEntriesFrom(input, _repeated_waypoints_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
