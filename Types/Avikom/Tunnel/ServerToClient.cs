// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/tunnel/server_to_client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Tunnel {

  /// <summary>Holder for reflection information generated from avikom/tunnel/server_to_client.proto</summary>
  public static partial class ServerToClientReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/tunnel/server_to_client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerToClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRhdmlrb20vdHVubmVsL3NlcnZlcl90b19jbGllbnQucHJvdG8SDWF2aWtv",
            "bS50dW5uZWwaGWF2aWtvbS9nZW5lcmljL3BlZXIucHJvdG8iRQoOU2VydmVy",
            "VG9DbGllbnQSDgoGbWV0aG9kGAEgASgJEg8KB3JlcXVlc3QYAiABKAwSEgoK",
            "bWVzc2FnZV9pZBgDIAEoBEJpChdhcHAuYXZpa29tLnR5cGVzLnR1bm5lbFo4",
            "Z2l0bGFiLnViLnVuaS1iaWVsZWZlbGQuZGUvYXZpa29tL2dvLXR5cGVzL2F2",
            "aWtvbS90dW5uZWyqAhNBdmlrb20uVHlwZXMuVHVubmVsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Generic.PeerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Tunnel.ServerToClient), global::Avikom.Types.Tunnel.ServerToClient.Parser, new[]{ "Method", "Request", "MessageId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A message to be sent from a server to a tunneled client.
  /// Clients need to resolve the (local) method name and assign the correct message IDs to responses
  /// sent back to the server.
  /// Note that method names may differ depending on the client's language.
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class ServerToClient : pb::IMessage<ServerToClient> {
    private static readonly pb::MessageParser<ServerToClient> _parser = new pb::MessageParser<ServerToClient>(() => new ServerToClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerToClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Tunnel.ServerToClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClient(ServerToClient other) : this() {
      method_ = other.method_;
      request_ = other.request_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerToClient Clone() {
      return new ServerToClient(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private string method_ = "";
    /// <summary>
    //// Method name in CapitalCase since this is the default proto style
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private pb::ByteString request_ = pb::ByteString.Empty;
    /// <summary>
    //// A message as a byte string; needs to be parsed and forwarded to the local gRPC server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Request {
      get { return request_; }
      set {
        request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private ulong messageId_;
    /// <summary>
    //// An ID associated with the request; A response must contain the correct ID!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerToClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerToClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      if (Request != other.Request) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Request.Length != 0) hash ^= Request.GetHashCode();
      if (MessageId != 0UL) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Method.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Method);
      }
      if (Request.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Request);
      }
      if (MessageId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Request.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Request);
      }
      if (MessageId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerToClient other) {
      if (other == null) {
        return;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Request.Length != 0) {
        Request = other.Request;
      }
      if (other.MessageId != 0UL) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Method = input.ReadString();
            break;
          }
          case 18: {
            Request = input.ReadBytes();
            break;
          }
          case 24: {
            MessageId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
