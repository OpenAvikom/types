// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/generic/modality.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Generic {

  /// <summary>Holder for reflection information generated from avikom/generic/modality.proto</summary>
  public static partial class ModalityReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/generic/modality.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModalityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1hdmlrb20vZ2VuZXJpYy9tb2RhbGl0eS5wcm90bxIOYXZpa29tLmdlbmVy",
            "aWMiPQoITW9kYWxpdHkSDgoGdmlzdWFsGAEgASgCEhAKCGF1ZGl0b3J5GAIg",
            "ASgCEg8KB3RhY3RpbGUYAyABKAJCbAoYYXBwLmF2aWtvbS50eXBlcy5nZW5l",
            "cmljWjlnaXRsYWIudWIudW5pLWJpZWxlZmVsZC5kZS9hdmlrb20vZ28tdHlw",
            "ZXMvYXZpa29tL2dlbmVyaWOqAhRBdmlrb20uVHlwZXMuR2VuZXJpY2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Generic.Modality), global::Avikom.Types.Generic.Modality.Parser, new[]{ "Visual", "Auditory", "Tactile" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// A message specifying one of three- or a combination of three interaction modalities supported 
  /// for, for example, instructions, peers, user_profiles and sessions.
  /// @author Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class Modality : pb::IMessage<Modality> {
    private static readonly pb::MessageParser<Modality> _parser = new pb::MessageParser<Modality>(() => new Modality());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Modality> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Generic.ModalityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modality() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modality(Modality other) : this() {
      visual_ = other.visual_;
      auditory_ = other.auditory_;
      tactile_ = other.tactile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modality Clone() {
      return new Modality(this);
    }

    /// <summary>Field number for the "visual" field.</summary>
    public const int VisualFieldNumber = 1;
    private float visual_;
    /// <summary>
    //// things you see (Sight)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Visual {
      get { return visual_; }
      set {
        visual_ = value;
      }
    }

    /// <summary>Field number for the "auditory" field.</summary>
    public const int AuditoryFieldNumber = 2;
    private float auditory_;
    /// <summary>
    //// things you hear (Hearing)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Auditory {
      get { return auditory_; }
      set {
        auditory_ = value;
      }
    }

    /// <summary>Field number for the "tactile" field.</summary>
    public const int TactileFieldNumber = 3;
    private float tactile_;
    /// <summary>
    //// things you touch/feel (Touch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Tactile {
      get { return tactile_; }
      set {
        tactile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Modality);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Modality other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Visual, other.Visual)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Auditory, other.Auditory)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Tactile, other.Tactile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Visual != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Visual);
      if (Auditory != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Auditory);
      if (Tactile != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Tactile);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Visual != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Visual);
      }
      if (Auditory != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Auditory);
      }
      if (Tactile != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Tactile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Visual != 0F) {
        size += 1 + 4;
      }
      if (Auditory != 0F) {
        size += 1 + 4;
      }
      if (Tactile != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Modality other) {
      if (other == null) {
        return;
      }
      if (other.Visual != 0F) {
        Visual = other.Visual;
      }
      if (other.Auditory != 0F) {
        Auditory = other.Auditory;
      }
      if (other.Tactile != 0F) {
        Tactile = other.Tactile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Visual = input.ReadFloat();
            break;
          }
          case 21: {
            Auditory = input.ReadFloat();
            break;
          }
          case 29: {
            Tactile = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
