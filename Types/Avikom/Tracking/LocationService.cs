// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avikom/tracking/location_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avikom.Types.Tracking {

  /// <summary>Holder for reflection information generated from avikom/tracking/location_service.proto</summary>
  public static partial class LocationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for avikom/tracking/location_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZhdmlrb20vdHJhY2tpbmcvbG9jYXRpb25fc2VydmljZS5wcm90bxIPYXZp",
            "a29tLnRyYWNraW5nGhphdmlrb20vbWF0aC92ZWN0b3IzZC5wcm90bxoeYXZp",
            "a29tL3VuaXR5L2dhbWVfb2JqZWN0LnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8iQgoNVGFyZ2V0UmVxdWVzdBIOCgZ0YXJnZXQYASABKAkS",
            "EAoIc2xlZXBfbXMYAiABKAUSDwoHd2F0Y2hlchgDIAEoCTKyAQoPTG9jYXRp",
            "b25TZXJ2aWNlEk0KEEdldFNjZW5lUG9zaXRpb24SHi5hdmlrb20udHJhY2tp",
            "bmcuVGFyZ2V0UmVxdWVzdBoVLmF2aWtvbS5tYXRoLlZlY3RvcjNEIgAwARJQ",
            "ChNHZXRSZWxhdGl2ZVBvc2l0aW9uEh4uYXZpa29tLnRyYWNraW5nLlRhcmdl",
            "dFJlcXVlc3QaFS5hdmlrb20ubWF0aC5WZWN0b3IzRCIAMAFCbwoZYXBwLmF2",
            "aWtvbS50eXBlcy50cmFja2luZ1o6Z2l0bGFiLnViLnVuaS1iaWVsZWZlbGQu",
            "ZGUvYXZpa29tL2dvLXR5cGVzL2F2aWtvbS90cmFja2luZ6oCFUF2aWtvbS5U",
            "eXBlcy5UcmFja2luZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Avikom.Types.Math.Vector3DReflection.Descriptor, global::Avikom.Types.Unity.GameObjectReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avikom.Types.Tracking.TargetRequest), global::Avikom.Types.Tracking.TargetRequest.Parser, new[]{ "Target", "SleepMs", "Watcher" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// This message is used to request an entities location.
  /// @author: Alexander Neumann &lt;alneuman@techfak.uni-bielefeld.de>
  /// </summary>
  public sealed partial class TargetRequest : pb::IMessage<TargetRequest> {
    private static readonly pb::MessageParser<TargetRequest> _parser = new pb::MessageParser<TargetRequest>(() => new TargetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avikom.Types.Tracking.LocationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRequest(TargetRequest other) : this() {
      target_ = other.target_;
      sleepMs_ = other.sleepMs_;
      watcher_ = other.watcher_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRequest Clone() {
      return new TargetRequest(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private string target_ = "";
    /// <summary>
    //// the object/entity that should be tracked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sleep_ms" field.</summary>
    public const int SleepMsFieldNumber = 2;
    private int sleepMs_;
    /// <summary>
    //// the sleep interval between messages; should be equal or larger than time needed to process messages; a higher value reduces load on the service and on the network 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SleepMs {
      get { return sleepMs_; }
      set {
        sleepMs_ = value;
      }
    }

    /// <summary>Field number for the "watcher" field.</summary>
    public const int WatcherFieldNumber = 3;
    private string watcher_ = "";
    /// <summary>
    //// the origin of relative requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Watcher {
      get { return watcher_; }
      set {
        watcher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Target != other.Target) return false;
      if (SleepMs != other.SleepMs) return false;
      if (Watcher != other.Watcher) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (SleepMs != 0) hash ^= SleepMs.GetHashCode();
      if (Watcher.Length != 0) hash ^= Watcher.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Target.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Target);
      }
      if (SleepMs != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SleepMs);
      }
      if (Watcher.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Watcher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (SleepMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SleepMs);
      }
      if (Watcher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Watcher);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetRequest other) {
      if (other == null) {
        return;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.SleepMs != 0) {
        SleepMs = other.SleepMs;
      }
      if (other.Watcher.Length != 0) {
        Watcher = other.Watcher;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Target = input.ReadString();
            break;
          }
          case 16: {
            SleepMs = input.ReadInt32();
            break;
          }
          case 26: {
            Watcher = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
